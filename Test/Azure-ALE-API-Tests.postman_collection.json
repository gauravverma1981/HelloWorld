{
	"info": {
		"_postman_id": "9eb60814-6d50-420c-a2f9-c6ca685fe6b0",
		"name": "Azure-ALE-API-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "APIM Token Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "31be4122-e78c-4df9-91cd-8b09011b29f0",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"JSON Data:\", jsonData);",
							"console.log(\"JSON Token:\", jsonData.access_token);",
							"var authString = \"Bearer \" + jsonData.access_token;",
							"console.log(\"Token\", authString);",
							"postman.setEnvironmentVariable(\"authorize\", authString);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client-id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{client-secret}}",
							"type": "text"
						},
						{
							"key": "resource",
							"value": "{{resource}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://login.microsoftonline.com/{{oauth-tenant}}/oauth2/token",
					"protocol": "https",
					"host": [
						"login",
						"microsoftonline",
						"com"
					],
					"path": [
						"{{oauth-tenant}}",
						"oauth2",
						"token"
					]
				},
				"description": "This is the request to request a token for the <resource> API in APIM."
			},
			"response": []
		},
		{
			"name": "GetFreightRequestList",
			"item": [
				{
					"name": "APIM Token Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31be4122-e78c-4df9-91cd-8b09011b29f0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"console.log(\"JSON Token:\", jsonData.access_token);",
									"var authString = \"Bearer \" + jsonData.access_token;",
									"console.log(\"Token\", authString);",
									"postman.setEnvironmentVariable(\"authorize\", authString);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client-id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client-secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{resource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{oauth-tenant}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{oauth-tenant}}",
								"oauth2",
								"token"
							]
						},
						"description": "This is the request to request a token for the <resource> API in APIM."
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightRequestIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?freightRequestId={{validID1}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "freightRequestId",
									"value": "{{validID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - Unknown FreightRequestIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.eql(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?freightRequestId=ALExxx",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "freightRequestId",
									"value": "ALExxx"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of ChangeBefore 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.eql(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?changedBefore=2019-01-01",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "changedBefore",
									"value": "2019-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of ChangeAfter 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?changedAfter=2019-01-01",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2019-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of Changes in 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?changedAfter=2019-01-01&changedBefore=2019-12-31",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2019-01-01"
								},
								{
									"key": "changedBefore",
									"value": "2019-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of Changes in 2020",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?changedAfter=2020-01-01&changedBefore=2020-12-31",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2020-01-01"
								},
								{
									"key": "changedBefore",
									"value": "2020-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightStatus = Processing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Processing\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?freightStatus=Processing",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "Processing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightStatus = In-Transit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"In-Transit\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?freightStatus=In-Transit",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "In-Transit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightStatus = On-Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"On-Site\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?freightStatus=On-Site",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "On-Site"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "A folder containing all the ways to test the GetShippingList",
			"protocolProfileBehavior": {}
		},
		{
			"name": "GetFreightRequestList (Old Format)",
			"item": [
				{
					"name": "APIM Token Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31be4122-e78c-4df9-91cd-8b09011b29f0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"console.log(\"JSON Token:\", jsonData.access_token);",
									"var authString = \"Bearer \" + jsonData.access_token;",
									"console.log(\"Token\", authString);",
									"postman.setEnvironmentVariable(\"authorize\", authString);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client-id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client-secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{resource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{oauth-tenant}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{oauth-tenant}}",
								"oauth2",
								"token"
							]
						},
						"description": "This is the request to request a token for the <resource> API in APIM."
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightRequestIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?freightRequestId={{validID1}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "freightRequestId",
									"value": "{{validID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - Unknown FreightRequestIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.eql(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?freightRequestId=CMRxxx",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "freightRequestId",
									"value": "CMRxxx"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of ChangeBefore 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.eql(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?changedBefore=2019-01-01",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "changedBefore",
									"value": "2019-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of ChangeAfter 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?changedAfter=2019-01-01",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2019-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of Changes in 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?changedAfter=2019-01-01&changedBefore=2019-12-31",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2019-01-01"
								},
								{
									"key": "changedBefore",
									"value": "2019-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of Changes in 2020",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?changedAfter=2020-01-01&changedBefore=2020-12-31",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2020-01-01"
								},
								{
									"key": "changedBefore",
									"value": "2020-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightStatus = Processing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Processing\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/requests?freightStatus=Processing",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"requests"
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "Processing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightStatus = In-Transit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"In-Transit\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?freightStatus=In-Transit",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "In-Transit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightRequestList - List of FreightStatus = On-Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightRequestList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightRequestList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"On-Site\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-request/v1/?freightStatus=On-Site",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-request",
								"v1",
								""
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "On-Site"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "A folder containing all the ways to test the GetShippingList",
			"protocolProfileBehavior": {}
		},
		{
			"name": "GetFreightItemList",
			"item": [
				{
					"name": "APIM Token Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31be4122-e78c-4df9-91cd-8b09011b29f0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"console.log(\"JSON Token:\", jsonData.access_token);",
									"var authString = \"Bearer \" + jsonData.access_token;",
									"console.log(\"Token\", authString);",
									"postman.setEnvironmentVariable(\"authorize\", authString);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client-id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client-secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{resource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{oauth-tenant}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{oauth-tenant}}",
								"oauth2",
								"token"
							]
						},
						"description": "This is the request to request a token for the <resource> API in APIM."
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List for a FreightRequestIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?freightRequestId={{validID1}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "freightRequestId",
									"value": "{{validID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - Unknown FreightRequestIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.eql(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?freightRequestId=CMRxxx",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "freightRequestId",
									"value": "CMRxxx"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of ChangeBefore 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.eql(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?changedBefore=2019-01-01",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "changedBefore",
									"value": "2019-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of ChangeAfter 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?changedAfter=2019-01-01",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2019-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of Changes in 2019",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?changedAfter=2019-01-01&changedBefore=2019-12-31",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2019-01-01"
								},
								{
									"key": "changedBefore",
									"value": "2019-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of Changes in 2020",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?changedAfter=2020-01-01&changedBefore=2020-12-31",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "changedAfter",
									"value": "2020-01-01"
								},
								{
									"key": "changedBefore",
									"value": "2020-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of FreightStatus = Processing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Processing\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?freightStatus=Processing",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "Processing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of FreightStatus = In-Transit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"In-Transit\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?freightStatus=In-Transit",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "In-Transit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of FreightStatus = On-Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"On-Site\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?freightStatus=On-Site",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "freightStatus",
									"value": "On-Site"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemList - List of FreightStatus with a consignment number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"freightItemList\");",
									"});",
									"",
									"pm.test(\"Verify the number of records\",function() {",
									"   var response = JSON.parse(responseBody); ",
									"   pm.expect(response.freightItemList.length).to.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"type": "text",
								"value": "{{ocp-apim-subscription-key}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorize}}"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-items?consignmentNo=114970",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-items"
							],
							"query": [
								{
									"key": "consignmentNo",
									"value": "114970"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "A folder containing all the ways to test the GetFreightItemList",
			"protocolProfileBehavior": {}
		},
		{
			"name": "SetFreightItemEvent",
			"item": [
				{
					"name": "APIM Token Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31be4122-e78c-4df9-91cd-8b09011b29f0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"console.log(\"JSON Token:\", jsonData.access_token);",
									"var authString = \"Bearer \" + jsonData.access_token;",
									"console.log(\"Token\", authString);",
									"postman.setEnvironmentVariable(\"authorize\", authString);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client-id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client-secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{resource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{oauth-tenant}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{oauth-tenant}}",
								"oauth2",
								"token"
							]
						},
						"description": "This is the request to request a token for the <resource> API in APIM."
					},
					"response": []
				},
				{
					"name": "SetFreightItemEvent - All valid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be greater than 0\", function () {",
									"    pm.expect(jsonData.eventId).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be true\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(true);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-event/{{freightRequestId}}/item/{{itemNo}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-event",
								"{{freightRequestId}}",
								"item",
								"{{itemNo}}"
							]
						},
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "eventCode",
									"value": "{{eventCode}}",
									"type": "text"
								},
								{
									"key": "eventSource",
									"value": "{{eventSource}}",
									"type": "text"
								},
								{
									"key": "eventLocation",
									"value": "{{eventLocation}}",
									"type": "text"
								},
								{
									"key": "eventDesc",
									"value": "{{eventDesc}}",
									"type": "text"
								},
								{
									"key": "eventLongDesc",
									"value": "{{eventLongDesc}}",
									"type": "text"
								},
								{
									"key": "eventData",
									"value": "{{eventData}}",
									"type": "text"
								},
								{
									"key": "eventCountryCode",
									"value": "{{eventCountryCode}}",
									"type": "text"
								},
								{
									"key": "eventPostalCode",
									"value": "{{eventPostalCode}}",
									"type": "text"
								},
								{
									"key": "eventStatus",
									"value": "{{eventStatus}}",
									"type": "text"
								},
								{
									"key": "eventTime",
									"value": "{{eventTime}}",
									"type": "text"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SetFreightItemEvent - Missing input - eventTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be null\", function () {",
									"    pm.expect(jsonData.eventId).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be false\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(false);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-event/{{freightRequestId}}/item/{{itemNo}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-event",
								"{{freightRequestId}}",
								"item",
								"{{itemNo}}"
							]
						},
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "eventCode",
									"value": "{{eventCode}}",
									"type": "text"
								},
								{
									"key": "eventSource",
									"value": "{{eventSource}}",
									"type": "text"
								},
								{
									"key": "eventLocation",
									"value": "{{eventLocation}}",
									"type": "text"
								},
								{
									"key": "eventDesc",
									"value": "{{eventDesc}}",
									"type": "text"
								},
								{
									"key": "eventPostalCode",
									"value": "{{eventPostalCode}}",
									"type": "text"
								},
								{
									"key": "eventStatus",
									"value": "{{eventStatus}}",
									"type": "text"
								},
								{
									"key": "eventTime",
									"value": null,
									"type": "text"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SetFreightItemEvent - invalid future eventTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be null\", function () {",
									"    pm.expect(jsonData.eventId).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be false\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(false);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-event/{{freightRequestId}}/item/{{itemNo}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-event",
								"{{freightRequestId}}",
								"item",
								"{{itemNo}}"
							]
						},
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "eventCode",
									"value": "{{eventCode}}",
									"type": "text"
								},
								{
									"key": "eventSource",
									"value": "{{eventSource}}",
									"type": "text"
								},
								{
									"key": "eventLocation",
									"value": "{{eventLocation}}",
									"type": "text"
								},
								{
									"key": "eventDesc",
									"value": "{{eventDesc}}",
									"type": "text"
								},
								{
									"key": "eventLongDesc",
									"value": "{{eventLongDesc}}",
									"type": "text"
								},
								{
									"key": "eventCountryCode",
									"value": "{{eventCountryCode}}",
									"type": "text"
								},
								{
									"key": "eventPostalCode",
									"value": "{{eventPostalCode}}",
									"type": "text"
								},
								{
									"key": "eventStatus",
									"value": "{{eventStatus}}",
									"type": "text"
								},
								{
									"key": "eventTime",
									"value": "2050-01-01",
									"type": "text"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "A folder containing all the ways to test the SetFreightItemEvent",
			"protocolProfileBehavior": {}
		},
		{
			"name": "GetFreightItemEvents",
			"item": [
				{
					"name": "APIM Token Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31be4122-e78c-4df9-91cd-8b09011b29f0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"console.log(\"JSON Token:\", jsonData.access_token);",
									"var authString = \"Bearer \" + jsonData.access_token;",
									"console.log(\"Token\", authString);",
									"postman.setEnvironmentVariable(\"authorize\", authString);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client-id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client-secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{resource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{oauth-tenant}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{oauth-tenant}}",
								"oauth2",
								"token"
							]
						},
						"description": "This is the request to request a token for the <resource> API in APIM."
					},
					"response": []
				},
				{
					"name": "GetFreightItemEvents - Get events for all line items - All valid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventHistory\");",
									"});",
									"",
									"pm.test(\"length of eventHistory to be greater than 0\", function () {",
									"    pm.expect(jsonData.eventHistory.length).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-event/{{freightRequestId}}/events",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-event",
								"{{freightRequestId}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemEvents - Invalid freightRequestId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-event/CMR000/events",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-event",
								"{{freightRequestId}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemEvents - Get events for for specific line item - All valid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventHistory\");",
									"});",
									"",
									"pm.test(\"length of eventHistory to be greater than 0\", function () {",
									"    pm.expect(jsonData.eventHistory.length).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-event/{{freightRequestId}}/events?lineItemNo={{lineItemNo}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-event",
								"{{freightRequestId}}",
								"events"
							],
							"query": [
								{
									"key": "lineItemNo",
									"value": "{{lineItemNo}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemEvents - Invalid freightLineItemId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/request-event/CMR000/events?lineItemNo={{lineItemNo}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"request-event",
								"{{freightRequestId}}",
								"events"
							],
							"query": [
								{
									"key": "lineItemNo",
									"value": "000"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "A folder containing all the ways to test the GetFreightItemEvents",
			"protocolProfileBehavior": {}
		},
		{
			"name": "SetFreightItemLUEvent",
			"item": [
				
				{
					"name": "SetFreightItemLUEvent - All valid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be greater than 0\", function () {",
									"    pm.expect(jsonData.eventId).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be true\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(true);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/lu-event/lu/{{logisticsUnitId}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"lu-event",
								"lu",
								"{{logisticsUnitId}}"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"eventCode\": \"50\",\n\t\"eventSource\": \"ALE\",\n\t\"eventLocation\": \"PDC\",\n\t\"eventDesc\":\"received\",\n\t\"eventLongDesc\":\"item received in good condition\",\n\t\"eventData\": {\n\t\t\"transactionId\":\"3443\",\n\t\t\"assetId\": \"232323\"\n\t},\n\t\"eventPostalCode\":\"6000\",\n\t\"eventTime\": \"2020-03-20\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "SetFreightItemEvent - Missing input - eventTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be null\", function () {",
									"    pm.expect(jsonData.eventId).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be false\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(false);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/lu-event/lu/{{logisticsUnitId}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"lu-event",
								"lu",
								"{{logisticsUnitId}}"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"eventCode\": \"50\",\n\t\"eventSource\": \"ALE\",\n\t\"eventLocation\": \"PDC\",\n\t\"eventDesc\":\"received\",\n\t\"eventLongDesc\":\"item received in good condition\",\n\t\"eventData\": {\n\t\t\"transactionId\":\"3443\",\n\t\t\"assetId\": \"232323\"\n\t},\n\t\"eventPostalCode\":\"6000\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "SetFreightItemEvent - invalid future eventTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be null\", function () {",
									"    pm.expect(jsonData.eventId).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be false\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(false);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/lu-event/lu/{{logisticsUnitId}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"lu-event",
								"lu",
								"{{logisticsUnitId}}"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"eventCode\": \"50\",\n\t\"eventSource\": \"ALE\",\n\t\"eventLocation\": \"PDC\",\n\t\"eventDesc\":\"received\",\n\t\"eventLongDesc\":\"item received in good condition\",\n\t\"eventData\": {\n\t\t\"transactionId\":\"3443\",\n\t\t\"assetId\": \"232323\"\n\t},\n\t\"eventPostalCode\":\"6000\",\n\t\"eventTime\": \"2022-12-20\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "SetFreightItemEvent - missing payload - eventData",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be null\", function () {",
									"    pm.expect(jsonData.eventId).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be false\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(false);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/lu-event/lu/{{logisticsUnitId}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"lu-event",
								"lu",
								"{{logisticsUnitId}}"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"eventCode\": \"50\",\n\t\"eventSource\": \"ALE\",\n\t\"eventLocation\": \"PDC\",\n\t\"eventDesc\":\"received\",\n\t\"eventLongDesc\":\"item received in good condition\",\n\t\"eventPostalCode\":\"6000\",\n\t\"eventTime\": \"2022-12-20\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "SetFreightItemLUEvent - invalid payload - missing field for 'transactionId'",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventId\");",
									"});",
									"",
									"pm.test(\"eventId to be null\", function () {",
									"    pm.expect(jsonData.eventId).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"isSuccess\");",
									"});",
									"",
									"pm.test(\"isSuccess to be false\", function () {",
									"    pm.expect(jsonData.isSuccess).to.be.eql(false);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/lu-event/lu/{{logisticsUnitId}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"lu-event",
								"lu",
								"{{logisticsUnitId}}"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"eventCode\": \"50\",\n\t\"eventSource\": \"ALE\",\n\t\"eventLocation\": \"PDC\",\n\t\"eventDesc\":\"received\",\n\t\"eventLongDesc\":\"item received in good condition\",\n\t\"eventData\": {\n\t\t\"assetId\": \"232323\"\n\t},\n\t\"eventPostalCode\":\"6000\",\n\t\"eventTime\": \"2020-03-20\"\n}"
						}
					},
					"response": []
				}
			],
			"description": "A folder containing all the ways to test the SetFreightItemEvent",
			"protocolProfileBehavior": {}
		},
		{
			"name": "GetFreightItemLUEvents",
			"item": [
				{
					"name": "GetFreightItemLUEvents -  All valid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"eventHistory\");",
									"});",
									"",
									"pm.test(\"length of eventHistory to be greater than 0\", function () {",
									"    pm.expect(jsonData.eventHistory.length).to.be.above(0);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/lu-event/lu/{{logisticsUnitId}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"lu-event",
								"lu",
								"{{logisticsUnitId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFreightItemLUEvents - Invalid logisticsUnitId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bfbb1f0-4d88-4223-ae25-83991172bf3a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(\"JSON Data:\", jsonData);",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response time is less than 2500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{ocp-apim-subscription-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorize}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{request-uri}}/freight-management/v1/lu-event/lu/{{logisticsUnitId}}",
							"host": [
								"{{request-uri}}"
							],
							"path": [
								"freight-management",
								"v1",
								"lu-event",
								"lu",
								"0000"
							]
						}
					},
					"response": []
				}
			],
			"description": "A folder containing all the ways to test the GetFreightItemLUEvents",
			"protocolProfileBehavior": {}
		}
		
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c77e7888-8230-4303-8dcc-4e635bb3a7ca",
				"type": "text/javascript",
				"exec": [
					"pm.environment.set(\"Timestamp\", new Date());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8a86a907-5bca-46af-83a2-6c494186ec36",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}